// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id    String    @id @default(uuid())
  createdAt   DateTime    @default(now())
  password    String
  userName   String   @unique
  firstName   String
  LastName    String
  jobBoards JobBoard[]
  pocketedJobs PocketedJob[]
}

model PocketedJob{
  id    String    @id @default(uuid())
  createdAt   DateTime    @default(now())
  updatedAt DateTime @updatedAt
  salary  Int
  jobPositionName   String
  companyName String
  jobUrl    String
  description String?
  jobColumns   String    @default("[]")
  rejected    Boolean   @default(false)
  offerMade Boolean @default(false)
  notes String @default("[]")

  steps Step[]
  userId String
  user User @relation(fields: [userId], references: [id])
  jobBoardId String
  jobBoard JobBoard @relation(fields: [jobBoardId], references: [id])

  @@unique([userId, companyName, jobPositionName])
}

model JobBoard{
  id    String    @id @default(uuid())
  createdAt   DateTime    @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String
  defaultJobColumns String @default("[]")
  extraJobColumns String @default("[]")
  allColumns String @default("[]")
  user User @relation(fields: [userId], references: [id])
  userId String
  pocketedJobs PocketedJob[]
}

model Step{
  id    String    @id @default(uuid())
  name String
  stepNumber Int
  stepDescription String?
  currentStep Boolean
  pocketedJobId String
  dueDate String?
  pocketedJob PocketedJob @relation(fields: [pocketedJobId], references: [id])
}
